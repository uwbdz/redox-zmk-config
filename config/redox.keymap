#include <input/processors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp ESC>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <15 16>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 22>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <29 30>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <35 36>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <43 44>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <51 52>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <16 21>;
            timeout-ms = <50>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <30 35>;
            timeout-ms = <50>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <28 29>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <37 36>;
        };
    };

    macros {
        dongle_bootload_macro: bootload_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
            label = "BOOTLOAD_MACRO";
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&bootloader
&kp GRAVE       &kp NUMBER_1        &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4             &kp NUMBER_5  &none            &none  &none         &none                            &none           &none         &none                  &kp BACKSPACE
&kp TAB         &kp Q               &kp W         &kp E           &kp R                    &kp T         &none            &none  &kp Y         &kp U                            &kp I           &kp O         &kp P                  &kp MINUS
&kp CAPSLOCK    &kp A               &kp S         &kp D           &kp F                    &kp G                                 &kp H         &kp J                            &kp K           &kp L         &kp SEMICOLON          &om RIGHT_SHIFT ENTER
&kp LEFT_SHIFT  &hm LEFT_CONTROL Z  &hm LALT X    &kp C           &kp V                    &kp B         &none            &none  &kp N         &kp M                            &kp COMMA       &hm RALT DOT  &hm LEFT_CONTROL FSLH  &caps_tap RIGHT_GUI DUMMY
&kp LCTRL       &kp LEFT_WIN        &kp LEFT_ALT  &mo LAYER_MOVE  &hm LEFT_CONTROL SPACE                                                       &mod_or_del RIGHT_CONTROL DUMMY  &mo LAYER_MOVE  &out OUT_USB  &out OUT_BLE           &none
                                                                                           &bt_clear     &macro_to_mac    &none  &bt BT_SEL 0
                                                                  &lt LAYER_SYMBOLS ENTER  &none         &none            &none  &none         &lt LAYER_NUMBERS ESCAPE
                                                                                                         &none            &none
            >;
        };

        layer_1 {
            bindings = <
&bootloader
&trans       &trans           &trans  &trans             &trans  &trans  &trans             &trans  &trans  &trans  &trans             &trans  &trans               &trans
&trans       &trans           &trans  &trans             &trans  &trans  &trans             &trans  &trans  &trans  &trans             &trans  &trans               &trans
&trans       &trans           &trans  &trans             &trans  &trans                             &trans  &trans  &trans             &trans  &trans               &trans
&trans       &hm LEFT_META Z  &trans  &trans             &trans  &trans  &trans             &trans  &trans  &trans  &trans             &trans  &hm RIGHT_META FSLH  &trans
&trans       &trans           &trans  &mo LAYER_MACMOVE  &trans                                             &trans  &mo LAYER_MACMOVE  &trans  &trans               &trans
                                                                 &trans  &macro_to_linux    &trans  &trans
                                                         &trans  &trans  &trans             &trans  &trans  &trans
                                                                         &trans             &trans
            >;
        };

        layer_2 {
            bindings = <
&bootloader
&trans       &trans           &trans       &trans         &trans        &trans         &trans    &trans  &trans  &trans                &trans                 &trans             &trans              &trans
&trans       &kp GRAV         &kp CARET    &kp AMPERSAND  &kp ASTERISK  &kp BACKSLASH  &trans    &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans             &trans              &trans
&trans       &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR    &kp PERCENT                      &trans  &macro_left_bracket   &macro_right_bracket   &macro_left_brace  &macro_right_brace  &trans
&trans       &kp F1           &kp F2       &kp F3         &kp F4        &kp F5         &kp F6    &trans  &trans  &kp F7                &kp F8                 &kp F9             &kp F10             &kp F11
&trans       &trans           &trans       &trans         &trans                                                 &trans                &trans                 &trans             &trans              &trans
                                                                        &trans         &trans    &trans  &trans
                                                          &trans        &trans         &trans    &trans  &trans  &trans
                                                                                       &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&bootloader
&trans         &trans         &trans             &trans            &trans     &trans  &trans    &trans  &trans      &trans          &trans          &trans         &trans           &trans
&kp LEFT_META  &kp C_MUTE     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp LG(L)  &trans  &trans    &trans  &trans      &kp HOME        &kp LC(LEFT)    &kp LC(RIGHT)  &kp END          &trans
&trans         &kp LC(TAB)    &kp LA(GRAV)       &kp LG(TAB)       &trans     &trans                    &trans      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans
&trans         &kp C_AC_BACK  &kp C_AC_FORWARD   &kp C_PLAY_PAUSE  &trans     &trans  &trans    &trans  &bt BT_CLR  &trans          &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2     &bt BT_SEL 3
&trans         &trans         &trans             &trans            &trans                                           &trans          &trans          &trans         &trans           &trans
                                                                              &trans  &trans    &trans  &trans
                                                                   &trans     &trans  &trans    &trans  &trans      &trans
                                                                                      &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
&bootloader
&trans       &trans        &trans             &trans            &trans         &trans  &trans    &trans  &trans      &trans          &trans          &trans         &trans           &trans
&kp LC(UP)   &kp C_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp LG(LC(Q))  &trans  &trans    &trans  &trans      &kp LG(LEFT)    &kp LA(LEFT)    &kp LA(RIGHT)  &kp LG(RIGHT)    &trans
&trans       &kp LC(TAB)   &kp LG(GRAVE)      &kp LG(TAB)       &trans         &trans                    &trans      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &trans
&trans       &kp LG(LEFT)  &kp LG(RIGHT)      &kp C_PLAY_PAUSE  &trans         &trans  &trans    &trans  &bt BT_CLR  &trans          &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2     &bt BT_SEL 3
&trans       &trans        &trans             &trans            &trans                                               &trans          &trans          &trans         &trans           &trans
                                                                               &trans  &trans    &trans  &trans
                                                                &trans         &trans  &trans    &trans  &trans      &trans
                                                                                       &trans    &trans
            >;
        };

        layer_5 {
            bindings = <
&bootloader
&trans        &trans        &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans                &trans                 &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans    &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS      &kp EQUAL     &trans
&kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &trans                    &trans  &kp NUMBER_5          &kp NUMBER_6           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9
&trans        &trans        &trans        &trans        &trans        &trans  &trans    &trans  &trans  &trans                &trans                 &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans                                          &trans                &trans                 &trans        &trans        &trans
                                                                      &trans  &trans    &trans  &trans
                                                        &trans        &trans  &trans    &trans  &trans  &trans
                                                                              &trans    &trans
            >;
        };
    };
};
